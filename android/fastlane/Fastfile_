# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  before_all do
    setup_circle_ci
  end

  desc "Android Build"
  private_lane :build do |options|
    versions = google_play_track_version_codes(
      track: options[:track],
      json_key_data: ENV["GOOGLE_PLAY_KEY"]
    )
    current_version_code = versions[0].to_i
    new_version_code = current_version_code + 1
    new_version_name = "#{options[:build_name]}-#{new_version_code}"
    properties = {
      "versionCode" => new_version_code,
      "versionName" => new_version_name,
    }

    gradle(
      task: "clean assemble",
      build_type: "Release",
      properties: properties,
      flags: "--no-daemon --max-workers 2"
    )
  
    new_version_code
  end

  desc "Deploy an apk to Google Play on the given track"
  private_lane :deploy do |options|
    version = build(build_name: options[:build_name], track: options[:track])

    upload_to_play_store(
      track: options[:track],
      json_key_data: ENV["GOOGLE_PLAY_KEY"],
    )

    slack(message: "New #{options[:build_name]} build(#{version}) available on google play")
  end

  desc "Deploy a new Beta apk to Google Play"
  lane :beta_deploy do |options|
    deploy(build_name: "africa.yoma Beta", track: "beta")
  end

  desc "Deploy a new production build to the Google Play"
  lane :production_deploy do
    deploy(build_name: "africa.yoma", track: "production")
  end

  error do |lane, exception|
    slack(
      message: "An error has occurred",
      success: false,
      attachment_properties: {
        fields: [{
          title: "Details",
          value: exception.to_s,
        }]
      },
      payload: { "Output" => exception.error_info.to_s }
    )
  end
end
